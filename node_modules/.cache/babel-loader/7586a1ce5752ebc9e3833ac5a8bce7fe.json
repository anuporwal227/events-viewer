{"ast":null,"code":"import _toConsumableArray from \"/Users/anu/Desktop/event-viewer/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/anu/Desktop/event-viewer/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/anu/Desktop/event-viewer/src/views/Home/index.js\";\nimport React, { useState } from 'react';\nimport cls from 'classnames';\nimport Header from 'components/Header';\nimport { EVENTS } from 'globals/constants';\nimport * as R from 'ramda';\nimport css from './styles.module.scss';\n\nvar Home = function Home() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedTabs = _useState2[0],\n      setSelectedTabs = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      activeEventId = _useState4[0],\n      setActiveEventId = _useState4[1];\n\n  var addToSelectedTabs = function addToSelectedTabs(selectedEvent) {\n    var isEventSelected = selectedTabs.filter(function (event) {\n      return event.eventId === selectedEvent.eventId;\n    });\n\n    if (!isEventSelected.length) {\n      setSelectedTabs([].concat(_toConsumableArray(selectedTabs), [selectedEvent]));\n      setActiveEventId(selectedEvent.eventId);\n    }\n  };\n\n  var removeFromSelectedEvents = function removeFromSelectedEvents(eventId) {\n    var updatedTabs = selectedTabs.filter(function (event) {\n      return event.eventId !== eventId;\n    });\n    var selectedTabIndex = R.findIndex(R.propEq('eventId', eventId), selectedTabs);\n    setSelectedTabs(updatedTabs);\n\n    if (!updatedTabs.length) {\n      setActiveEventId(null);\n    } else {\n      if (selectedTabIndex) {\n        setActiveEventId(updatedTabs[selectedTabIndex - 1].eventId);\n      } else {\n        setActiveEventId(updatedTabs[0].eventId);\n      }\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: css.home,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: css.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: css['events-list'],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, EVENTS().map(function (event) {\n    return React.createElement(\"div\", {\n      className: css['event-type'],\n      onClick: function onClick() {\n        return addToSelectedTabs(event);\n      },\n      key: event.eventId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, event.eventName);\n  })), React.createElement(\"div\", {\n    className: css['selected-events'],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, selectedTabs.map(function (event) {\n    return React.createElement(\"div\", {\n      key: \"selected_event_\".concat(event.eventId),\n      onClick: function onClick() {\n        return setActiveEventId(event.eventId);\n      },\n      className: cls(css['selected-event'], activeEventId === event.eventId && css.active),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, event.eventName, React.createElement(\"span\", {\n      className: css['close-tab'],\n      onClick: function onClick() {\n        return removeFromSelectedEvents(event.eventId);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"\\u2715\"));\n  })), React.createElement(\"div\", {\n    className: css['event-details'],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: css['active-tab-content'],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, function () {\n    var currentActiveEvent = selectedTabs.filter(function (event) {\n      return event.eventId === activeEventId;\n    });\n    if (!currentActiveEvent.length) return null;\n    var _currentActiveEvent$ = currentActiveEvent[0].content,\n        headers = _currentActiveEvent$.headers,\n        data = _currentActiveEvent$.data;\n    return React.createElement(\"table\", {\n      className: css.table,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, headers.map(function (i) {\n      return React.createElement(\"th\", {\n        className: css.th,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, i));\n    }))), data.length ? React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, data.map(function (eventInfo) {\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, eventInfo.map(function (info) {\n        return React.createElement(\"td\", {\n          className: css.cell,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, info);\n      }));\n    })) : React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      colSpan: headers.length,\n      className: css.cell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"No data found\")));\n  }()))));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/anu/Desktop/event-viewer/src/views/Home/index.js"],"names":["React","useState","cls","Header","EVENTS","R","css","Home","selectedTabs","setSelectedTabs","activeEventId","setActiveEventId","addToSelectedTabs","selectedEvent","isEventSelected","filter","event","eventId","length","removeFromSelectedEvents","updatedTabs","selectedTabIndex","findIndex","propEq","home","content","map","eventName","active","currentActiveEvent","headers","data","table","i","th","eventInfo","info","cell"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nimport cls from 'classnames';\n\nimport Header from 'components/Header';\n\nimport {EVENTS} from 'globals/constants';\nimport * as R from 'ramda';\n\nimport css from './styles.module.scss';\n\nconst Home = () => {\n    const [selectedTabs, setSelectedTabs] = useState([]);\n    const [activeEventId, setActiveEventId] = useState(null);\n\n\n    const addToSelectedTabs = (selectedEvent => {\n        const isEventSelected = selectedTabs.filter(event => event.eventId === selectedEvent.eventId);\n        if(!isEventSelected.length){\n            setSelectedTabs([...selectedTabs, selectedEvent]);\n            setActiveEventId(selectedEvent.eventId);\n        }\n    });\n\n    const removeFromSelectedEvents = (eventId) => {\n        const updatedTabs = selectedTabs.filter(event => event.eventId !== eventId);\n        const selectedTabIndex = R.findIndex(R.propEq('eventId', eventId),  selectedTabs);\n\n        setSelectedTabs(updatedTabs);\n        if(!updatedTabs.length){\n            setActiveEventId(null);\n        } else {\n            if(selectedTabIndex){\n                setActiveEventId(updatedTabs[selectedTabIndex-1].eventId);\n            } else {\n                setActiveEventId(updatedTabs[0].eventId);\n            }\n        }\n    };\n\n    return <div className={css.home}>\n        <Header/>\n        <div className={css.content}>\n            <div className={css['events-list']}>\n                {EVENTS().map(event => <div className={css['event-type']}\n                                            onClick={() => addToSelectedTabs(event)}\n                                            key={event.eventId}>\n                    {event.eventName}\n                </div> )}\n            </div>\n            <div className={css['selected-events']}>\n                {selectedTabs.map(event => <div key={`selected_event_${event.eventId}`}\n                                                onClick={() => setActiveEventId(event.eventId)}\n                                                className={cls(css['selected-event'], activeEventId === event.eventId && css.active)}>\n                    {event.eventName}\n                    <span className={css['close-tab']} onClick={() => removeFromSelectedEvents(event.eventId)}>&#10005;</span>\n                </div>)}\n            </div>\n            <div className={css['event-details']}>\n                <div className={css['active-tab-content']}>\n                    {(() => {\n                       const currentActiveEvent = selectedTabs.filter(event => event.eventId === activeEventId);\n                       if(!currentActiveEvent.length) return null;\n                       const { headers, data } = currentActiveEvent[0].content;\n                       return (\n                           <table className={css.table}>\n                               <thead>\n                                   <tr>\n                                   {headers.map(i => <th className={css.th}><div>{i}</div></th>)}\n                                   </tr>\n                               </thead>\n                               {data.length ?\n                                   <tbody>\n                                   {data.map(eventInfo => <tr>\n                                       {eventInfo.map(info => <td className={css.cell}>{info}</td>)}\n                                   </tr>)}\n                                   </tbody>:\n                                   <tr>\n                                       <td colSpan={headers.length} className={css.cell}>No data found</td>\n                                   </tr>\n                               }\n                           </table>\n                       )\n                    })()}\n                </div>\n            </div>\n        </div>\n    </div>\n};\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}